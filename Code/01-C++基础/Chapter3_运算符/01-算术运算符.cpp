/*| **运算符** | **术语**   | **示例**    | **结果**  |
| +          | 正号       | +3          | 3         |
| -          | 负号       | -3          | -3        |
| +          | 加         | 10 + 5      | 15        |
| -          | 减         | 10 - 5      | 5         |
| *          | 乘         | 10 * 5      | 50        |
| /          | 除         | 10 / 5      | 2         |
| %          | 取模(取余) | 10 % 3      | 1         |
| ++         | 前置递增   | a=2; b=++a; | a=3; b=3; |
| ++         | 后置递增   | a=2; b=a++; | a=3; b=2; |
| --         | 前置递减   | a=2; b=--a; | a=1; b=1; |
| --         | 后置递减   | a=2; b=a--; | a=1; b=2; |*/

#include <iostream>
using namespace std;

int main()
{
    // 加减乘除
    cout << 10 + 3 << endl;
    cout << 10 - 3 << endl;
    cout << 10 * 3 << endl;
    cout << 10 / 3 << endl;  //两个整数相除结果依然是整数
    cout << 10 / 20 << endl;
    //cout << 10 / 3 << endl; //报错，除数不可以为0
    cout << 0.5 / 0.25 << endl; //两个小数可以相除

    // 取模 --> 只有整型变量可以进行取模运算
    cout << 10 % 3 << endl;
    cout << 10 % 20 << endl;
    //cout << 10 % 0 << endl; //取模运算时，除数也不能为0
    //cout << 3.14 % 1.1 << endl; //两个小数不可以取模

    //递增 --> 前置递增(++变量)先对变量进行++，再计算表达式，后置递增(变量++)相反
    int a = 10;
    a++; //等价于a = a + 1
    cout << a << endl; // 11

    //前置递增
    int b = 10;
    ++b;
    cout << b << endl; // 11

    //区别
    //前置递增先对变量进行++，再计算表达式
    int a2 = 10;
    int b2 = ++a2 * 10;
    cout << b2 << endl; //110
    cout << a2 << endl; //11

    //后置递增先计算表达式，后对变量进行++
    int a3 = 10;
    int b3 = a3++ * 10;
    cout << b3 << endl; //100
    cout << a3 << endl; //11
}
